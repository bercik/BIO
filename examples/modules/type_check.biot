#INCLUDE("../stdlib/biotest.biom")

def test()
   PRINT("IS_ERROR\n")
   BT_ASSERT_TRUE(IS_ERROR(GET_GLOBAL(x))) % true
   BT_ASSERT_FALSE(IS_ERROR(10)) % false

   PRINT("IS_INT\n")
   BT_ASSERT_ERROR(IS_INT(x)) % error
   BT_ASSERT_FALSE(IS_INT("abc")) % false
   BT_ASSERT_TRUE(IS_INT(10)) % true

   PRINT("IS_FLOAT\n")
   BT_ASSERT_FALSE(IS_FLOAT(true)) % false
   BT_ASSERT_TRUE(IS_FLOAT(10.0)) % true
   BT_ASSERT_FALSE(IS_FLOAT(10)) % false

   PRINT("IS_BOOL\n")
   BT_ASSERT_FALSE(IS_BOOL("abc")) % false
   BT_ASSERT_TRUE(IS_BOOL(true)) % true

   PRINT("IS_NONE\n")
   BT_ASSERT_FALSE(IS_NONE("abc")) % false
   BT_ASSERT_TRUE(IS_NONE(none)) % true

   PRINT("IS_STRING\n")
   BT_ASSERT_TRUE(IS_STRING("abc")) % true
   BT_ASSERT_FALSE(IS_STRING(none)) % false

   PRINT("IS_ARRAY\n")
   BT_ASSERT_TRUE(IS_ARRAY(CREATE_ARRAY(1))) % true
   BT_ASSERT_FALSE(IS_ARRAY(CREATE_TUPLE())) % false

   PRINT("IS_TUPLE\n")
   BT_ASSERT_FALSE(IS_TUPLE(CREATE_ARRAY(1))) % false
   BT_ASSERT_TRUE(IS_TUPLE(CREATE_TUPLE())) % true

   PRINT("IS_DICT\n")
   BT_ASSERT_FALSE(IS_DICT(CREATE_ARRAY(1))) % false
   BT_ASSERT_TRUE(IS_DICT(CREATE_DICT())) % true

   PRINT("IS_NUMBER\n")
   BT_ASSERT_FALSE(IS_NUMBER(true)) % false
   BT_ASSERT_TRUE(IS_NUMBER(10.0)) % true
   BT_ASSERT_TRUE(IS_NUMBER(10)) % true

   PRINT("IS_COLLECTION\n")
   BT_ASSERT_TRUE(IS_COLLECTION(CREATE_ARRAY(1))) % true
   BT_ASSERT_TRUE(IS_COLLECTION(CREATE_TUPLE())) % true
   BT_ASSERT_FALSE(IS_COLLECTION(CREATE_DICT())) % false

   PRINT("ARE_SAME_TYPE\n")
   BT_ASSERT_TRUE(ARE_SAME_TYPE(10, 20, 30)) % true
   BT_ASSERT_FALSE(ARE_SAME_TYPE(10, 20.0, 30)) % false
   BT_ASSERT_ERROR(ARE_SAME_TYPE(10, x, 30)) % error
   BT_ASSERT_ERROR(ARE_SAME_TYPE(10, 10.0, x)) % error
end
