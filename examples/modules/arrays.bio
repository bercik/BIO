def onSTART()
   PRINT("TUPLE\n")
   % tworzymy tuplę
   ASSIGN_LOCAL(tup, CREATE_TUPLE(1, 5.3, -1.4, -15, 23.5))
   % negujemy wszystkie liczby
   ASSIGN_LOCAL(tup, MUL(tup, CREATE_TUPLE_OF_ELEMENTS(5, -1)))
   % wypisujemy
   PRINT(tup, "\n") % (-1, -5.3, 1.4, 15, -23.5)

   PRINT("RANGE\n")
   PRINT(RANGE(1, 10), "\n") % ( 1, 2, ..., 10 )
   PRINT(RANGE(1.0, 10), "\n") % error
   PRINT(RANGE(10, 1), "\n") % error

   PRINT("ARRAY\n")
   % tworzymy tablicę
   ASSIGN_LOCAL(arr, CREATE_ARRAY(2))
   PRINT(arr, "\n") % [ none, none ]
   PRINT(CREATE_ARRAY(-2), "\n") % error

   PRINT("DICT\n")
   ASSIGN_LOCAL(dict, CREATE_DICT("el1", 10, "el2", none, "flaga", true))
   PRINT(dict, "\n") % { el1: 10, el2: none, flaga: true }
   PRINT(CREATE_DICT(true, "asd"), "\n") % error
   
   PRINT("SET\n")
   PRINT(SET(tup, 10, "siema"), "\n") % error
   PRINT(SET(arr, 10, "siema"), "\n") % error
   PRINT(SET(dict, 10, "siema"), "\n") % error
   SET(arr, 0, "siema")
   SET(dict, "el1", arr)
   PRINT(arr, "\n") % [ "siema", none ]
   PRINT(dict, "\n") % { el1: [ "siema", none ], el2: none, el3: true }

   PRINT("GET\n")
   PRINT(GET(tup, 10), "\n") % error
   PRINT(GET(dict, "el3"), "\n") % error
   PRINT(GET(arr, "el3"), "\n") % error
   PRINT(GET(arr, 0), "\n") % siema
   PRINT(GET(dict, "el1"), "\n") % [ "siema", none ]

   PRINT("SIZE\n")
   PRINT(SIZE(tup), "\n") % 5
   PRINT(SIZE(arr), "\n") % 2
   PRINT(SIZE(dict), "\n") % 3

   PRINT("COPY\n")
   ASSIGN_LOCAL(arr2, arr)
   PRINT(arr, arr2, "\n") % [ "siema", none ] [ "siema", none ]
   SET(arr2, 1, 10)
   PRINT(arr, arr2, "\n") % [ "siema", 10 ] [ "siema", 10 ]
   ASSIGN_LOCAL(arr2, COPY(arr))
   SET(arr2, 1, 20)
   PRINT(arr, arr2, "\n") % [ "siema", 10 ] [ "siema", 20 ]
   ASSIGN_LOCAL(dict2, COPY(dict))
   PRINT(dict, dict2, "\n") % { el1: [ "siema", 10 ], el2: none, el3: true } { el1: [ "siema", 10 ], el2: none, el3: true } 
   SET(dict2, "el1", -2.5)
   PRINT(dict, dict2, "\n") % { el1: [ "siema", 10 ], el2: none, el3: true } { el1: -2.5, el2: none, el3: true } 

   PRINT("DEEP_COPY\n")
   ASSIGN_LOCAL(dict3, DEEP_COPY(dict))
   PRINT(dict, dict3, "\n") % { el1: [ "siema", 10 ], el2: none, el3: true } { el1: [ "siema", 10 ], el2: none, el3: true } 
   SET(GET(dict3, "el1"), 1, true)
   PRINT(dict, dict3, "\n") % { el1: [ "siema", 10 ], el2: none, el3: true } { el1: [ "siema", true ], el2: none, el3: true } 

   PRINT("EXTEND_ARRAY\n")
   ASSIGN_LOCAL(arr, CREATE_ARRAY(2))
   SET(arr, 0, 10)
   SET(arr, 1, 20)
   PRINT(arr, "\n") % [ 10, 20 ]
   ASSIGN_LOCAL(arr, EXTEND_ARRAY(arr, 4))
   SET(arr, 2, 30)
   PRINT(arr, "\n") % [ 10, 20, 30, none ]
   ASSIGN_LOCAL(arr, EXTEND_ARRAY(arr, 1))
   PRINT(arr, "\n") % [ 10 ]

   PRINT("UNPACK\n")
   UNPACK(x, y, z, RANGE(1, 10))
   PRINT(x, y, z, "\n") % 1 2 ( 3, 4, 5, 6, 7, 8, 9, 10 )
   UNPACK(x, y, z, RANGE(1, 3))
   PRINT(x, y, z, "\n") % 1 2 3
   PRINT(UNPACK(x, y, z, k, RANGE(1, 3)), "\n") % error

   PRINT("CONTAINS\n")
   PRINT(CONTAINS(arr, 10), "\n") % true
   PRINT(CONTAINS(arr, "siema"), "\n") % false
   PRINT(CONTAINS(tup, 15), "\n") % true

   PRINT("CONTAINS_KEY\n")
   PRINT(CONTAINS_KEY(dict, "el1"), "\n") % true
   PRINT(CONTAINS_KEY(dict, "el4"), "\n") % false

   PRINT("CONTAINS_VALUE\n")
   PRINT(CONTAINS_VALUE(dict, true), "\n") % true
   PRINT(CONTAINS_VALUE(dict, "cos"), "\n") % false

   PRINT("COUNT_ELEMENTS\n")
   ASSIGN_LOCAL(tup, CREATE_TUPLE(10, true, none, 10, -10, "10"))
   PRINT(COUNT_ELEMENTS(tup, 10), "\n") % 2
   ASSIGN_LOCAL(dict, CREATE_DICT("el1", 10, "el2", true, "el3", none, "el4", "siema", "el5", 10, "el6", "10"))
   PRINT(COUNT_ELEMENTS(dict, 10), "\n") % 2

   PRINT("SORT_ASC\n")
   PRINT(SORT_ASC(CREATE_TUPLE(10, 5, 15, 25, -20, 35)), "\n")
   PRINT(SORT_ASC(CREATE_TUPLE(1, 0.5, 1.5, 2.5, -2.0, 3.5)), "\n")
   PRINT(SORT_ASC(CREATE_TUPLE("b", "a", "ab", "ba", "c", "xyz", "adsd")), "\n")
   PRINT(SORT_ASC(CREATE_TUPLE("b", 1)), "\n")
   PRINT(SORT_ASC(CREATE_TUPLE(true, 1)), "\n")

   PRINT("SORT_DESC\n")
   PRINT(SORT_DESC(CREATE_TUPLE(10, 5, 15, 25, -20, 35)), "\n")
   PRINT(SORT_DESC(CREATE_TUPLE(1, 0.5, 1.5, 2.5, -2.0, 3.5)), "\n")
   PRINT(SORT_DESC(CREATE_TUPLE("b", "a", "ab", "ba", "c", "xyz", "adsd")), "\n")
   PRINT(SORT_DESC(CREATE_TUPLE("b", 1)), "\n")
   PRINT(SORT_DESC(CREATE_TUPLE(true, 1)), "\n")
end
